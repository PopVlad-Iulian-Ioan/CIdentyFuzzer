BUFFER OVERFLOW

1.Input din fisier:

fuzzFile = attack.bin
fuzzedProgram = ./buffer-overflow/simple-vulnerable-buffer-overflow-from-file
attackAddress = 0x8049236
partialAttackAddress = 0x8049200
partialAttackAddressMask = 0xFFFFFF00
mutations = 210
inputFromFile = True
checkForBufferOverflow = True
detailedLog = False
showFails = False

2.Input din stdin:

fuzzFile = attack.bin
fuzzedProgram = ./buffer-overflow/simple-vulnerable-buffer-overflow-from-stdin
attackAddress = 0x80491f6
partialAttackAddress = 0x8049100
partialAttackAddressMask = 0xFFFFFF00
mutations = 210
inputFromFile = False
checkForBufferOverflow = True
detailedLog = False
showFails = False


FORMAT STRING

1. Input din fisier:

fuzzFile = attack.bin
fuzzedProgram = ./format-string/formatfile2
attackAddress = 0x80491f6
partialAttackAddress = 0x8049100
partialAttackAddressMask = 0xFFFFFF00
mutations = 210
inputFromFile = True
checkForBufferOverflow = False
detailedLog = False
showFails = False

2. Input din stdin:

fuzzFile = attack.bin
fuzzedProgram = ./format-string/format1
attackAddress = 0x80491f6
partialAttackAddress = 0x8049100
partialAttackAddressMask = 0xFFFFFF00
mutations = 210
inputFromFile = False
checkForBufferOverflow = False
detailedLog = False
showFails = False

!Pentru a vedea mai multa memorie mapata fuzzedProgram = ./format-string/format1
!Pentru a vedea mai multe detalii detailedLog = True si obtional showFails = True

